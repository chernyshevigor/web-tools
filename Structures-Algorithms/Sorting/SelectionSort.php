<?php

$x = [1, 34, 5, 8, 17, 11, 7];
SelectionSort::get($x);
print_r($x);
exit;

/*
 * Worst O(n^2)
 * Average O(n^2)
 * Best O(n^2)
 */
class SelectionSort
{
    /**
     * @param int[] $in
     * @return void
     */
    public static function get(array &$in): void
    {
        for ($i = 0; $i < count($in) - 1; $i++) {
            $min = $i;
            for ($j = $i + 1, $jMax = count($in); $j < $jMax; $j++) {
                if ($in[$j] < $in[$min]) {
                    $min = $j;
                }
            }
            if ($min !== $i) {
                [$in[$i], $in[$min]] = [$in[$min], $in[$i]];
            }
        }
    }
}

/*
На очередной итерации будем находить минимум в массиве после текущего элемента и менять его с ним, если надо.
Таким образом, после i-ой итерации первые i элементов будут стоять на своих местах.
Эту сортировку можно реализовать двумя способами – сохраняя минимум и его индекс или просто переставляя
текущий элемент с рассматриваемым, если они стоят в неправильном порядке.
*/
